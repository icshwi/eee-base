# In case, this variable is undefined
E3_CROSS_COMPILER_TARGET_ARCHS ?=

define git_update =
git submodule deinit -f $@/
sed '/submodule/,24465d'  $(TOP)/.git/config >/tmp/$$ && mv -f /tmp/$$ $(TOP)/.git/config
rm -rf $(TOP)/.git/modules/$@
git submodule init $@/
git submodule update --init --recursive $@/
git submodule update --remote --merge $@/
endef


define git_base_update =
git submodule deinit -f $@/
sed '/submodule/,$$d'  $(TOP)/.git/config >/tmp/$$ && mv -f /tmp/$$ $(TOP)/.git/config
git submodule init $@/
git submodule update --init --recursive $@/
endef

define site_base
m4 -D_CROSS_COMPILER_TARGET_ARCHS="$(E3_CROSS_COMPILER_TARGET_ARCHS)" -D_EPICS_SITE_VERSION="E3-$@-patch" \
   -D_INSTALL_LOCATION="$(E3_BASE_INSTALL_LOCATION)" \
   -D_CC_IFC14XX_TOOLCHAIN_PATH="$(E3_CC_IFC14XX_TOOLCHAIN_PATH)" -D_CC_IFC14XX_TOOLCHAIN_VER="$(E3_CC_IFC14XX_TOOLCHAIN_VER)" \
   -D_CC_POKY_TOOLCHAIN_PATH="$(E3_CC_POKY_TOOLCHAIN_PATH)" -D_CC_POKY_TOOLCHAIN_VER="$(E3_CC_POKY_TOOLCHAIN_VER)" \
   $(TOP)/configure/config_site.m4 > $(TOP)/$(E3_BASE_SRC_PATH)/configure/CONFIG_SITE
$(QUIET) install -m 644 $(TOP)/configure/CONFIG_SITE_ENV  $(TOP)/$(E3_BASE_SRC_PATH)/configure/
endef

define patch_base
for i in $(wildcard $(TOP)/patch/R$1/*p0.patch); do\
	printf "\n>> Patching %s %s with the file : %s\n" "$(E3_BASE_SRC_PATH)" "$1" "$$i"; \
	patch -d $(TOP)/$(E3_BASE_SRC_PATH) --ignore-whitespace -p0 < $$i;\
done
endef

define patch_revert_base
for i in $(wildcard $(TOP)/patch/R$1/*p0.patch); do\
	printf "\n<< Reverting the applied patch %s %s with the file : %s\n" "$(E3_BASE_SRC_PATH)" "$1" "$$i"; \
	patch -R -d $(TOP)/$(E3_BASE_SRC_PATH) --ignore-whitespace -p0 < $$i;\
done

endef


define patch_site
for i in $(wildcard $(TOP)/patch/Site/R$1/*p0.patch); do\
	printf "\n>> Patching %s %s with the file : %s\n" "$(E3_BASE_SRC_PATH)" "$1" "$$i"; \
	patch -d $(TOP)/$(E3_BASE_SRC_PATH) --ignore-whitespace -p0 < $$i;\
done
endef


define patch_revert_site
for i in $(wildcard $(TOP)/patch/Site/R$1/*p0.patch); do\
	printf "\n<< Reverting the applied patch %s %s with the file : %s\n" "$(E3_BASE_SRC_PATH)" "$1" "$$i"; \
	patch -R -d $(TOP)/$(E3_BASE_SRC_PATH) --ignore-whitespace -p0 < $$i;\
done

endef


ifndef VERBOSE
  QUIET := @
endif

ifdef DEBUG_SHELL
  SHELL = /bin/sh -x
endif






### Exclude the following variables to display 
VARS_EXCLUDES+=git_update
VARS_EXCLUDES+=git_base_update
VARS_EXCLUDES+=set_base
VARS_EXCLUDES+=site_base
VARS_EXCLUDES+=patch_base
VARS_EXCLUDES+=patch_revert_base
VARS_EXCLUDES+=patch_site
VARS_EXCLUDES+=patch_revert_site
VARS_EXCLUDES+=QUIET
VARS_EXCLUDES+=SHELL

